{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/map-widget/map-widget.component.ts","webpack:///src/app/components/map-widget/map-widget.component.html","webpack:///src/app/components/selector/selector.component.ts","webpack:///src/app/components/selector/selector.component.html","webpack:///src/app/interfaces/location.ts","webpack:///src/app/services/marker-services.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","markerService","title","locations","zoomLevel","subs","push","get","subscribe","metaData","forEach","m","lat","lon","city","state","mapCenter","sub","unsubscribe","newMapCenter","resetView","updateMapCenter","selector","templateUrl","styleUrls","AppModule","forRoot","apiKey","declarations","imports","providers","bootstrap","MapWidgetComponent","SelectorComponent","emit","MarkerLocation","MarkerService","httpClient","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { MarkerLocation } from './interfaces/location';\r\nimport { MarkerService } from './services/marker-services.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'GeoRadix';\r\n  locations: MarkerLocation[] = [];\r\n  mapCenter: MarkerLocation;\r\n  zoomLevel = 4;\r\n  subs: Subscription[] = [];\r\n  constructor(\r\n    private markerService: MarkerService\r\n  ) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.subs.push(\r\n      this.markerService.get().subscribe((metaData) => {\r\n        metaData.forEach(m => {\r\n          this.locations.push(\r\n            new MarkerLocation(m.lat, m.lon, m.city, m.state)\r\n          );\r\n        });\r\n      })\r\n    );\r\n    this.mapCenter = new MarkerLocation(38.153781, -97.472113);\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subs.forEach((sub) => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n  updateMapCenter(newMapCenter: MarkerLocation): void {\r\n    this.mapCenter = newMapCenter;\r\n    this.zoomLevel = 11;\r\n  }\r\n  resetView(): void {\r\n    this.mapCenter = new MarkerLocation(38.153781, -97.472113);\r\n    this.zoomLevel = 4;\r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n    <div class='col-md-2'>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"resetView()\">Reset View</button>\r\n        <app-selector\r\n        [locations]='locations'\r\n        (updateMapCenter)='updateMapCenter($event)'\r\n        ></app-selector>\r\n    </div>\r\n    <div class='col-md-10'>\r\n        <app-map-widget\r\n        [locations]='locations'\r\n        [mapCenter]='mapCenter'\r\n        [zoomLevel]='zoomLevel'\r\n        ></app-map-widget>\r\n    </div>\r\n</div> ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { MapWidgetComponent } from './components/map-widget/map-widget.component';\r\nimport { SelectorComponent } from './components/selector/selector.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapWidgetComponent,\r\n    SelectorComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDRBePcAKyIi9AT0dJZBPg-1nDf_wZOCO0'\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MarkerLocation } from 'src/app/interfaces/location';\r\n\r\n@Component({\r\n  selector: 'app-map-widget',\r\n  templateUrl: './map-widget.component.html',\r\n  styleUrls: ['./map-widget.component.css']\r\n})\r\nexport class MapWidgetComponent implements OnInit {\r\n  title = 'My first AGM project';\r\n  @Input() locations: MarkerLocation[];\r\n  @Input() mapCenter: MarkerLocation = new MarkerLocation(51.178418, 7.309007);\r\n  @Input() zoomLevel = 8;\r\n  constructor(\r\n  ) {\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","\r\n<agm-map\r\n[latitude]='mapCenter.lat'\r\n[longitude]='mapCenter.lon'\r\n[zoom]='zoomLevel'\r\n>\r\n  <agm-marker\r\n    *ngFor=\"let location of locations\"\r\n    [latitude]=\"location.lat\"\r\n    [longitude]=\"location.lon\"\r\n  ></agm-marker>\r\n</agm-map>\r\n","import { Component, Output, OnInit, EventEmitter, Input, SimpleChange, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MarkerLocation } from 'src/app/interfaces/location';\r\n\r\n@Component({\r\n  selector: 'app-selector',\r\n  templateUrl: './selector.component.html',\r\n  styleUrls: ['./selector.component.css']\r\n})\r\nexport class SelectorComponent implements OnInit {\r\n  @Input() locations: MarkerLocation[];\r\n  @Output() updateMapCenter: EventEmitter<MarkerLocation> = new EventEmitter();\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n  }\r\n  setMapCenter(mapCenter: MarkerLocation): void {\r\n    this.updateMapCenter.emit(mapCenter);\r\n  }\r\n}\r\n","\r\n<div class=\"d-flex flex-sm-row flex-md-column\" style=\"max-height: calc(100vh - 38px); overflow: scroll;\">\r\n    <div *ngFor=\"let location of locations\">\r\n        <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"setMapCenter(location)\"\r\n        >{{location.state}}</button>\r\n    </div>\r\n</div>\r\n","export class MarkerLocation {\r\n  lat: number;\r\n  lon: number;\r\n  city: string;\r\n  state: string;\r\n  constructor(lat?: number, lon?: number, city?: string, state?: string) {\r\n    this.lat = lat ? lat : 51.678418;\r\n    this.lon = lon ? lon : 7.809007;\r\n    this.city = city ? city : 'null';\r\n    this.state = state ? state : 'null';\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MarkerService {\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n  get(): Observable<any> {\r\n    return this.httpClient.get('https://raw.githubusercontent.com/vega/vega/master/docs/data/us-state-capitals.json');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}